<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description>This job will build image for generated applications</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

BASEPATH=&apos;/Users/administrator/.jenkins/workspace&apos;
WORKSPACE=&apos;/ipa_build&apos;
CODEPATH=&apos;/newone/application/client/mobile/ios/newone&apos;
PROJECTNAME=&apos;newone&apos;
CRTLOCATION=&apos;/Users/administrator/Documents/IonicTest/output/363e98b5-8a62-4070-9d18-b18dbb5cb7bf.mobileprovision&apos;

GITURL=&apos;https://github.com/gepinfo/newone.git&apos;

#installr
APITOKEN='4G66wZx1EqiPc8FFZsBlWoR0vHeztFOj'
EMAIL='mithunvikram10decoders@gmail.com'

get_code(){

cd "$BASEPATH$WORKSPACE"

if [ ! -d "$PROJECTNAME" ] ; then
    echo "running git clone.."
    git clone $GITURL
    if [ $? -eq 0 ]; then
        echo "git clone sucessfull!"
    else
        echo "git clone failed!"
    fi
else
    echo "code exists!"
    cd $PROJECTNAME
    git pull
    if [ $? -eq 0 ]; then
        echo "git pull sucessfull!"
    else
        echo "git pull failed!"
    fi    
fi

}

build_code(){

cd "$BASEPATH$WORKSPACE$CODEPATH"

ionic cordova platform add ios
if [ $? -eq 0 ]; then
    echo "ios platform added sucessfully!"
    npm i -D -E @ionic/app-scripts
    npm i
    ionic cordova build ios
    if [ $? -eq 0 ]; then
        echo "ios build success!"
    else
        echo "ios build failed!"
    fi
else
    echo "add ios platform failed!"
fi


}

build_ipa(){
cd platforms/ios/build/emulator/

mkdir ./Payload

cp -R "$PROJECTNAME.app" ./Payload

cp $CRTLOCATION Payload/$PROJECTNAME.app/embedded.mobileprovision

zip -qr "$PROJECTNAME.ipa" Payload/

rm -rf ./Payload
}

upload_ipa(){

echo "uploading app file to installr.."

UPLOADRESPONSE=`curl -H "X-InstallrAppToken: $APITOKEN"  https://www.installrapp.com/apps.json -F "qqfile=@$PROJECTNAME.ipa" -F 'releaseNotes=These are the release notes for first app'`
APPID=`echo $UPLOADRESPONSE | jq -r .appData.id`

echo "app file uploaded appId : $APPID"

echo "sending email notification.."

EMAILRESPONSE=`curl -H "X-InstallrAppToken: $APITOKEN" https://www.installrapp.com/apps/$APPID/builds/latest/team.json -F "notify=$EMAIL"`
EMAILSTATUS=`echo $EMAILRESPONSE | jq -r .result`

echo "email status:$EMAILSTATUS"
}

get_code
build_code
build_ipa
upload_ipa
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>